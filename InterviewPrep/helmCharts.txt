Helm helps to manage k8s apps, [install/upgrade in different environments(prd,qa,dev) with help of configurable values(values.yaml)]

Helm charts helps to define, install, upgrade. 

Under a helm chart directory (ex: hello-world-chart), below content exists. ## helm create demo-nginx
templates (templates directory)
Values.yaml (Configurable values)
Charts.yaml (Chart info)
charts (charts directory)
LICENSE, README.md

Helm charts - Values.yaml -> vars used in other yaml as {{ .Values.replicacount }}, {{ .Values.image.repository }}

## Note: give -n namespace to recognize the k8s workspace
$helm install MyfirstChart binami/wordpress ## [ReleaseName][Chart]
$helm upgrade -f Values.yaml MyfirstChart binami/wordpress ## [Release][Chart]
$helm list -a -n <namespace>## lists releases in the namespace
$helm rollback MyfirstChart 1 ## [Release][Revision]
$helm uninstall MyfirstChart ## [Release]

-----
helm version
helm list ## lists releases|charts in the k8s cluster
helm search hub wordpress	## searches in charts artifactory
helm repo list ## lists repositories configured
helm repo remove bitnami ## removes repo connection
helm search repo wordpress ## no results. 
helm repo add bitnami https://charts.bitnami.com/bitnami
helm search repo wordpress ## expect results

helm install test-helm demo-nginx/ --values demo-nginx/values.yaml ## [ReleaseN][unpack dir][Values.yaml]
helm upgrade test-helm demo-nginx/ --values demo-nginx/values.yaml
helm history test-helm ## find revision history. 
helm rollback test-helm 1 ## rollback to revision1
helm get values test-helm # current values of the chart. 
helm uninstall test-helm 
helm --help

helm package example-chart/ .
helm push example-chart-1.0.tgz <artifact-registry> # <cloud-key>://<region-key>.<domain>/tenancy-namespace
helm pull <artifact-registry>/example-chart --version 0.1.0          
helm install exv1 example-chart-1.0.tgz -n example-chart -f values.yaml

Troubleshoot any issues. 
$helm list -a -n <namespace> ## list release names. usually one release per one k8s-namespace. 
$helm get values <release> -n <> ## user-supplied values if any
$helm diff revision <release> <revision1> <revision2> -n <> ## ex: helm diff revision rel1 241 242 -n hi

## note: install helm diff using:::: $helm plugin install https://github.com/databus23/helm-diff  

